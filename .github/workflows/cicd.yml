name: terraform CI/CD
on:
  push:
    branches: [develop]
    paths:
      - 'cicd/**'
  pull_request:
    branches: [develop]
    paths:
      - 'cicd/**'
      - '.github/workflows/cicd.yml'

jobs:
  terraform-ci-cd:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: cicd
    steps:
      - uses: actions/checkout@v2
      - name: tflint
        uses: reviewdog/action-tflint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: practice-cicd-mtk
          service_account_key: ${{ secrets.TF_API_TOKEN }}
          export_default_credentials: true
      - uses: hashicorp/setup-terraform@v1
      - id: fmt
        run: terraform fmt -check
        continue-on-error: true
      - id: init
        run: terraform init
      - id: validate
        run: terraform validate -no-color
      - id: plan
        run: terraform plan -no-color
        continue-on-error: true
      - id: apply
        if: github.event_name == 'push'
        run: terraform apply -auto-approve
      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outputs.stdout }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
